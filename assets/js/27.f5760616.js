(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{390:function(e,t,a){"use strict";a.r(t);var o=a(45),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"剪贴板-api-速成课"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪贴板-api-速成课"}},[e._v("#")]),e._v(" 剪贴板 API 速成课")]),e._v(" "),a("p",[e._v("原文地址："),a("a",{attrs:{href:"https://frontendnews.io/editions/2018-08-01-copy-and-paste-clipboard-api",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://frontendnews.io/editions/2018-08-01-copy-and-paste-clipboard-api"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"人人皆知的快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#人人皆知的快捷键"}},[e._v("#")]),e._v(" 人人皆知的快捷键")]),e._v(" "),a("p",[e._v("不是所有人都喜欢用快捷键操作电脑。有一大群用户和程序员都依赖图形菜单和按钮。然而，如果有什么快捷键组合是大家都知道的，那就是 "),a("code",[e._v("Cmd + C")]),e._v("，"),a("code",[e._v("Cmd + V")]),e._v("。是的，当然，在 Windows 上是 "),a("code",[e._v("Ctrl + C")]),e._v("，"),a("code",[e._v("Ctrl + V")]),e._v("。"),a("strong",[e._v("但是当你复制的时候究竟发生了什么呢？")])]),e._v(" "),a("h2",{attrs:{id:"剪贴板是一个数据缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪贴板是一个数据缓冲区"}},[e._v("#")]),e._v(" 剪贴板是一个数据缓冲区")]),e._v(" "),a("p",[e._v("每个主要的操作系统都有一个“剪贴板”。这是一个用于短期存储的数据缓冲区，有时称为“粘贴缓冲区”。新的复制或剪切命令将替换缓冲区中的先前值。几乎所有程序都可以访问这个缓冲区。否则，当我们碰到 "),a("code",[e._v("Cmd + v")]),e._v(" 时什么也没发生，我们会很恼火。")]),e._v(" "),a("p",[a("img",{attrs:{src:"Untitled-918261ad-ca4f-4600-9b96-6b1065c0666f.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"自动复制复杂的文本可以有良好的用户体验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动复制复杂的文本可以有良好的用户体验"}},[e._v("#")]),e._v(" 自动复制复杂的文本可以有良好的用户体验")]),e._v(" "),a("p",[e._v("通常在网站上，我们需要向用户呈现特殊的代码或文本。这段文字通常很长，看起来简直像胡言乱语。用户倾向于自己复制它。然而，如果他们在开头或结尾遗漏了一个字符怎么办？如果他们抓取了太多空白而你没有修剪空白怎么办？如果他们困惑于要复制什么呢？犯错的空间太大了。一个很好的解决方案是自动将这些文本复制到他们的剪贴板上。"),a("strong",[e._v("但是省事的地方，通常不省心。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"Untitled-0750c133-30bd-4f98-a570-65880ba01a25.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"剪贴板存在安全问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪贴板存在安全问题"}},[e._v("#")]),e._v(" 剪贴板存在安全问题")]),e._v(" "),a("p",[e._v("当用户完全控制剪贴板时，没有什么问题。然而，当一个应用或程序访问剪贴板时会发生什么呢？我打赌你可以开始想象一些糟糕的场景。如果一个应用偷偷地轮询你的剪贴板并将结果发送到服务器会怎么样？那些有潜在风险的敏感信息，如密码、银行账户或任何冗长的你不会考虑自己输入的安全令牌。"),a("strong",[e._v("我们如何应对这种情况？")])]),e._v(" "),a("h2",{attrs:{id:"安全策略使得浏览器上的复制和粘贴变得怪异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全策略使得浏览器上的复制和粘贴变得怪异"}},[e._v("#")]),e._v(" 安全策略使得浏览器上的复制和粘贴变得怪异")]),e._v(" "),a("p",[e._v("复制和粘贴操作在网络上有一段奇怪的历史。没有真正的标准。大多数浏览器已经确定了指令 "),a("code",[e._v(".execCommand('copy')")]),e._v("和指令 "),a("code",[e._v(".execCommand('paste')")]),e._v("。虽然这看起来很容易，但也有一些奇怪之处。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("const result = document.executeCommand('copy');\n")])])]),a("p",[e._v("如果这是你第一次使用 "),a("code",[e._v("document.execCommand('copy')")]),e._v('，你可能会想知道“文本参数在哪里？"。你可能会激动不已，试着运行 '),a("code",[e._v("document.execCommand('paste')")]),e._v("，却发现它什么也没做。 没有一些额外的代码工作，你不能直接指定你想添加到剪贴板上的文本。你当然不能访问剪贴板上的任何内容。你需要遵守一些规则。")]),e._v(" "),a("h2",{attrs:{id:"使用-executecommand-paste-访问剪贴板的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-executecommand-paste-访问剪贴板的规则"}},[e._v("#")]),e._v(" 使用  "),a("code",[e._v("executeCommand('paste')")]),e._v(" 访问剪贴板的规则")]),e._v(" "),a("p",[e._v("如果您想用 "),a("code",[e._v("document.execCommand('copy')")]),e._v("  复制文本:")]),e._v(" "),a("ol",[a("li",[e._v("内容必须存在于 DOM 中。")]),e._v(" "),a("li",[e._v("用户需要触发事件( Firefox )")]),e._v(" "),a("li",[e._v("复制的文本是用户选择的文本")])]),e._v(" "),a("p",[e._v("Chrome 不需要用户触发事件，但是在 Firefox 中需要。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("const button = document.querySelector('#btnCopy');\nbutton.addEventListener('click', event => {\n  console.log(document.execCommand('copy'));\n});\n")])])]),a("p",[e._v("如果您想复制不在 DOM 中的文本，该怎么办？你可以注入该文本。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("const button = document.querySelector('#btnCopy');\nbutton.addEventListener('click', event => {\n  const text = 'Hey look, this text is now in the DOM!';\n  const input = document.createElement('input');\n  document.body.appendChild(input);\n  input.value = text;\n  input.focus();\n  input.select();\n  console.log(document.execCommand('copy'));\n});\n")])])]),a("p",[e._v("如果你的文本不在 DOM 中，那就在 DOM 中创建它。上面的代码片段创建了一个输入元素，将其添加到 DOM 中，将文本插入到元素中，使它聚焦，选择它，最后复制它。")]),e._v(" "),a("p",[e._v("如果不像 "),a("code",[e._v("document.body.appendchild(input)")]),e._v("  中那样将子对象添加到 DOM 中，会发生什么？文本不会被复制。它不能只是一个独立的 DOM 节点，它需要在 DOM 中。")]),e._v(" "),a("p",[e._v("如果你想用 "),a("code",[e._v("document.execCommand('paste')")]),e._v("  直接从剪贴板上读取，你不能。它不适用于Chrome、Firefox、Edge 或 IE。要从剪贴板上获取数据，您必须监听粘贴事件。(这在 IE 中不支持。IE 剪贴板的情况也很奇怪。这是 window 对象上的一个属性，需要权限，但我们不会深入讨论这个内容)。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("document.addEventListener('paste', event => {\n  const text = event.clipboardData.getData('text/plain');\n  console.log(text);\n});\n")])])]),a("p",[e._v("用户的粘贴操作会触发"),a("a",{attrs:{href:"https://www.w3.org/TR/clipboard-apis/#clipboardeventinit-clipboarddata",target:"_blank",rel:"noopener noreferrer"}},[e._v("剪贴板事件"),a("OutboundLink")],1),e._v("。在事件中，您可以访问剪贴板数据属性，这是一个"),a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/dnd.html#datatransfer",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据传输对象"),a("OutboundLink")],1),e._v("。用正确的格式调用 "),a("code",[e._v("getData()")]),e._v(" 会返回复制的文本。")]),e._v(" "),a("p",[e._v("这很棒，因为您没有对用户剪贴板的未授权访问。用户必须发起粘贴的操作。然而，有一个潜在的问题。对 "),a("code",[e._v("getData()")]),e._v(" 的调用是同步的。")]),e._v(" "),a("p",[e._v("这对开发人员来说是个问题。如果他们粘贴了大量base64编码的图像会怎么样？或者其他一些惊人的大量数据？如果对粘贴的数据进行密集处理会怎么样？这可能会阻塞页面的主线程，从而显著地卡顿用户页面。")]),e._v(" "),a("p",[e._v("幸运的是，有一个即将到来的解决方案。这是一种全新的从剪贴板读写数据的方式。")]),e._v(" "),a("h2",{attrs:{id:"异步剪贴板-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步剪贴板-api"}},[e._v("#")]),e._v(" 异步剪贴板 API")]),e._v(" "),a("p",[e._v("这个新 API 比我们的老朋友 "),a("code",[e._v("document.execCommand('copy')")]),e._v(" 有几个改进。")]),e._v(" "),a("ul",[a("li",[e._v("从剪贴板读取和写入是独立的命令")]),e._v(" "),a("li",[e._v("基于 "),a("code",[e._v("promise")]),e._v(" 的异步剪贴板访问")]),e._v(" "),a("li",[e._v("基于权限。用户必须获取授权")]),e._v(" "),a("li",[e._v("不需要用户事件触发")])]),e._v(" "),a("p",[e._v("注：到目前为止仅支持 Chrome。此 API 可能会发生变化。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("navigator.clipboard.writeText('whatever you need to copy').then(() => {\n  console.log('Text copied!')           \n});\n")])])]),a("p",[e._v("首次发出此命令时，系统会提示用户授予权限。由于这个 API 是异步的，当我们等待用户的许可时，主线程是畅通的。如果 API 是同步的，我们就完蛋了。")]),e._v(" "),a("p",[e._v("要从剪贴板中读取，请使用 "),a("code",[e._v("readText()")]),e._v(" :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("navigator.clipboard.readText().then(text => {\n  console.log(text);     \n});\n")])])]),a("p",[e._v("就像以前一样，如果这是第一次，那么用户必须先授予权限，然后才能访问剪贴板。请记住，你无法确定当前剪贴板的值，数据可能很敏感。要求用户在必要时粘贴一个值仍然是一个好主意。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("document.addEventListener('paste', async event => {\n  const text = await navigator.clipboard.readText();\n  console.log(text);\n});\n")])])]),a("p",[e._v("这个例子是对同步 "),a("code",[e._v("getData()")]),e._v(" 传输方法的一大改进。用户必须授予权限，并且你具有异步访问权限。您可以更好地防止粘贴大量文本，并且更容易对粘贴的文本进行更密集的处理。")]),e._v(" "),a("h2",{attrs:{id:"只有活动的选项卡可以访问剪贴板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只有活动的选项卡可以访问剪贴板"}},[e._v("#")]),e._v(" 只有活动的选项卡可以访问剪贴板")]),e._v(" "),a("p",[e._v("用户总是会打开标签页。不受限制地使用键盘仍然是一个坏主意。你可以打开 "),a("a",{attrs:{href:"http://example.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("example.com"),a("OutboundLink")],1),e._v(" 的账单，把它放在那里一周。不要表现得好像你没有干过这样的事。在这段时间里，你会有各种各样的数据进出你的剪贴板。如果 "),a("a",{attrs:{href:"http://example.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("example.com"),a("OutboundLink")],1),e._v(" 轮询 "),a("code",[e._v("navigator.clipboard.readtext()")]),e._v(" 方法会怎么样？那将是非常危险的，但这里有一个安全措施。")]),e._v(" "),a("p",[e._v("当用户切换到另一个选项卡时，您的站点不再有权访问剪贴板。这是一个很好的预防措施，但是它伴随着一个恼人的调试问题。当你在 Chrome 中打开 DevTools 时，DevTools 本身就变成了活动标签。"),a("code",[e._v("readText()")]),e._v(" 或 "),a("code",[e._v("writeText()")]),e._v(" 的 "),a("code",[e._v("promise")]),e._v(" 会处于 "),a("code",[e._v("reject")]),e._v(" 状态，你会很恼火，表情会像“这就是为什么我不使用全新的 APIs ”。诀窍是推迟调用，直到你可以点击回标签页。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("setTimeout(async () => {\n  const text = await navigator.clipboard.readText();\n  console.log(text);\n}, 4000);\n")])])]),a("p",[e._v("这样也好不了多少，但会奏效的。这种怪异并不是异步剪贴板 API 的唯一缺点。")]),e._v(" "),a("h2",{attrs:{id:"异步剪贴板-api-不提供用户选择的文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步剪贴板-api-不提供用户选择的文本"}},[e._v("#")]),e._v(" 异步剪贴板 API 不提供用户选择的文本")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("document.execCommand('copy')")]),e._v(" 将自动复制用户选择的文本。如果你需要这个功能，你必须自己得到所选的文本，并将其传递给 "),a("code",[e._v("writeText()")]),e._v("。这将需要"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Selection",target:"_blank",rel:"noopener noreferrer"}},[e._v("选择 API"),a("OutboundLink")],1),e._v("、"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Range",target:"_blank",rel:"noopener noreferrer"}},[e._v("范围 API"),a("OutboundLink")],1),e._v(" 和一些 DOM 遍历的组合。你将不得不处理跨一系列 DOM 元素组合文本节点的问题，这可不好玩。")]),e._v(" "),a("h2",{attrs:{id:"了解有关异步剪贴板-api-的更多信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解有关异步剪贴板-api-的更多信息"}},[e._v("#")]),e._v(" 了解有关异步剪贴板 API 的更多信息")]),e._v(" "),a("p",[e._v("传奇人物杰森·米勒写了"),a("a",{attrs:{href:"https://developers.google.com/web/updates/2018/03/clipboardapi",target:"_blank",rel:"noopener noreferrer"}},[e._v("一篇令人惊叹的关于异步剪贴板 API 上文章"),a("OutboundLink")],1),e._v("。这基本上是目前的标准资源。")]),e._v(" "),a("h2",{attrs:{id:"对复制和粘贴负责"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对复制和粘贴负责"}},[e._v("#")]),e._v(" 对复制和粘贴负责")]),e._v(" "),a("p",[e._v("剪贴板访问对于用户体验来说是一个很好的工具，但是它有它的玫瑰刺。一些用户携带敏感数据，一些用户带来恶意数据。确保你负责任地处理用户的数据，并为那些讨厌的粘贴事件做好准备。")])])}),[],!1,null,null,null);t.default=n.exports}}]);