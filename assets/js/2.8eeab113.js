(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{165:function(a,t,e){"use strict";e.r(t);var i=e(166),r=e.n(i);for(var v in i)"default"!==v&&function(a){e.d(t,a,function(){return i[a]})}(v);t.default=r.a},166:function(a,t){},171:function(a,t,e){"use strict";var i=function(){var a=this.$createElement;this._self._c;return this._m(0)},r=[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"http-1-1-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP/1.1 协议")]),a._v(" "),e("h2",{attrs:{id:"短连接与长连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#短连接与长连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 短连接与长连接")]),a._v(" "),e("ul",[e("li",[a._v("Connection 头部")]),a._v(" "),e("li",[a._v("Keep-Alive(HTTP 1.1 默认支持长连接)、Close")]),a._v(" "),e("li",[a._v("仅针对当前连接有效 (存在 porxy 代理时，各层之间的 Connection 是独立的)")])]),a._v(" "),e("p",[a._v("古老的代理服务器：使用 proxy-connection")]),a._v(" "),e("ul",[e("li",[a._v("正向代理服务器、反向代理服务器")])]),a._v(" "),e("h2",{attrs:{id:"host-头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#host-头部","aria-hidden":"true"}},[a._v("#")]),a._v(" Host 头部")]),a._v(" "),e("ul",[e("li",[a._v("HTTP/1.1 规范要求请求必须加 Host 头部，Host 无、多个、不合法则返回 400")]),a._v(" "),e("li",[a._v("nginx 处理 Host 头部")])]),a._v(" "),e("h2",{attrs:{id:"代理服务器转发消息时的相关头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代理服务器转发消息时的相关头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 代理服务器转发消息时的相关头部")]),a._v(" "),e("ul",[e("li",[a._v("X-Forwarded-For/X-Real-IP")]),a._v(" "),e("li",[a._v("Max-Forwards 限制代理服务器的最大转发次数")]),a._v(" "),e("li",[a._v("Via 指明经过的代理服务器名称及版本")])]),a._v(" "),e("h2",{attrs:{id:"请求和响应的上下文头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求和响应的上下文头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 请求和响应的上下文头部")]),a._v(" "),e("h3",{attrs:{id:"请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 请求")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("User-Agent")])]),a._v(" "),e("li",[e("p",[a._v("Referer 浏览器对来自某一页面的请求自动添加的头部 absolute-URI/partial-URI (防盗链)")]),a._v(" "),e("p",[a._v("不会被添加的场景：")]),a._v(" "),e("ul",[e("li",[a._v("页面来源协议为 'file' 或 'data URI'")]),a._v(" "),e("li",[a._v("当前页面采用 HTTP，来源页面采用 HTTPS")]),a._v(" "),e("li",[a._v("服务器端常用语统计分析、缓存优化、防盗链")])])]),a._v(" "),e("li",[e("p",[a._v("From 告诉服务器联系到爬虫负责人")])])]),a._v(" "),e("h3",{attrs:{id:"响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应","aria-hidden":"true"}},[a._v("#")]),a._v(" 响应")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Server 指明服务器上所用软件的信息")])]),a._v(" "),e("li",[e("p",[a._v("Allow 与 Access-Ranges")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Allow：告诉客户端，服务器上该 URI 对应的资源允许哪些方法的执行")]),a._v(" "),e("ul",[e("li",[a._v("Allow: GET, HEAD, PUT")])])]),a._v(" "),e("li",[e("p",[a._v("Accept-Ranges：告诉客户端服务器上资源是否允许 range 请求(断点续传等)")]),a._v(" "),e("ul",[e("li",[a._v("Accept-Ranges: bytes")]),a._v(" "),e("li",[a._v("Accept-Ranges: none")])])])])])]),a._v(" "),e("h2",{attrs:{id:"内容协商与资源表述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容协商与资源表述","aria-hidden":"true"}},[a._v("#")]),a._v(" 内容协商与资源表述")]),a._v(" "),e("h3",{attrs:{id:"内容协商"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容协商","aria-hidden":"true"}},[a._v("#")]),a._v(" 内容协商")]),a._v(" "),e("p",[a._v("内容协商 每个 URI 指向的资源可以是任何事物，可以有多种不同的表述(不同语言、媒体格式、压缩编码等)。")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("主动式 Proactive")])]),a._v(" "),e("li",[e("p",[a._v("Accept: text/*、Accept-Language: en、Accept-Encoding: br, gzip")])]),a._v(" "),e("li",[e("p",[a._v("响应式 Reactive")]),a._v(" "),e("p",[a._v("300 Multiple Choices 或者 406 Not Acceptable")])])]),a._v(" "),e("p",[a._v("HTTP 包体：承载的消息内容")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("请求或者响应都可以携带包体")]),a._v(" "),e("ul",[e("li",[a._v("HTTP-message = start-line *(header-field) CRLF [message-body]")])])]),a._v(" "),e("li",[e("p",[a._v("发送 HTTP 请求时已经明确包体的全部长度")]),a._v(" "),e("ul",[e("li",[a._v("Content-Length")])])]),a._v(" "),e("li",[e("p",[a._v("不确定包体长度")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Transfer-Encoding 头部指明使用 Chunk 传输方式(含 Transfer-Encoding 头部后 Content-Length 头部被忽略)")])]),a._v(" "),e("li",[e("p",[a._v("chunked-body = *chunk")]),a._v(" "),e("p",[a._v("​                               last-chunk")]),a._v(" "),e("p",[a._v("​                               trailer-part(不是所有都支持 TE 头部)")]),a._v(" "),e("p",[a._v("​                               CRLF")])]),a._v(" "),e("li",[e("p",[a._v("chunk = chunk-size [chunk-ext] CRLF chunk-data CRLF")]),a._v(" "),e("ul",[e("li",[a._v("chunk-size = 1*HEXDIG(16进制)")]),a._v(" "),e("li",[a._v("chunk-data = 1*OCTET")])])])])]),a._v(" "),e("li",[e("p",[a._v("MIME")]),a._v(" "),e("ul",[e("li",[a._v("Content-Type")])])]),a._v(" "),e("li",[e("p",[a._v("Content-Disposition(可以设置为访问 URI 之下下载附件不打开网页 inline/attachments)")])])]),a._v(" "),e("h2",{attrs:{id:"html-form-表单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-form-表单","aria-hidden":"true"}},[a._v("#")]),a._v(" HTML Form 表单")]),a._v(" "),e("h3",{attrs:{id:"表单提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表单提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 表单提交")]),a._v(" "),e("ul",[e("li",[a._v("action: 提交时发起 HTTP 请求的 URI")])]),a._v(" "),e("h2",{attrs:{id:"多线程、断点续传、随机点播等场景的步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多线程、断点续传、随机点播等场景的步骤","aria-hidden":"true"}},[a._v("#")]),a._v(" 多线程、断点续传、随机点播等场景的步骤")]),a._v(" "),e("h3",{attrs:{id:"http-range-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-range-规范","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP Range 规范")]),a._v(" "),e("ul",[e("li",[a._v("头部\n"),e("ul",[e("li",[a._v('request 头部: Range: bytes=start-byte-pos "-"')]),a._v(" "),e("li",[a._v("response 头部: Content-Range:(见下文)")])])])]),a._v(" "),e("ul",[e("li",[a._v("允许服务器基于客户端的请求只发送响应包体的一部分给到客户端，客户端自动合成多个片段的包体组合成完整的体积更大的包体\n"),e("ul",[e("li",[a._v("支持断点续传")]),a._v(" "),e("li",[a._v("支持多线程下载")]),a._v(" "),e("li",[a._v("支持视频播放器实时拖动")])])]),a._v(" "),e("li",[a._v("服务器通过 Accept-Range 头部表示是否支持 Range 请求\n"),e("ul",[e("li",[a._v("Accept-Range: bytes/none")])])]),a._v(" "),e("li",[a._v("Range 请求范围的单位(基于字节，设包体总长度为 10000)，通过 Range 头部传递请求范围(Range: bytes=0-499)\n"),e("ul",[e("li",[a._v("第1个500字节: bytes=0-499")]),a._v(" "),e("li",[a._v("第2个500字节: bytes=500-999")]),a._v(" "),e("li",[a._v("最后1个500字节: bytes=-500")]),a._v(" "),e("li",[a._v("仅要第1个和最后1个字节: bytes=0-0,-1")])])]),a._v(" "),e("li",[a._v("Range 条件请求\n"),e("ul",[e("li",[a._v("如果客户端已经得到了 Range 响应的一部分，并想在这部分响应未过期的情况下，获取其他部分的响应\n"),e("ul",[e("li",[a._v("常与 If-Unmodified-Since 或者 If-Match 头部共同使用")])])]),a._v(" "),e("li",[a._v("If-Range = entity-tag/HTTP-date\n"),e("ul",[e("li",[a._v("可以使用 E-Tag 或者 Last-Modified(E-Tag 不同返回 412 状态码)")])])])])])]),a._v(" "),e("h3",{attrs:{id:"服务器响应-一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应-一","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务器响应(一)")]),a._v(" "),e("h4",{attrs:{id:"_206-partial-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_206-partial-content","aria-hidden":"true"}},[a._v("#")]),a._v(" 206 Partial Content")]),a._v(" "),e("ul",[e("li",[a._v("Content-Range 头部: 显示当前片段包体在完整包体中的位置")]),a._v(" "),e("li",[a._v("Content-Range = byte-content-range/other-content-range\n"),e("ul",[e("li",[a._v("Byte-content-range = byte-unit SP (byte-range-resp/unsatisfied-range)")]),a._v(" "),e("li",[a._v('Byte-range-resp = byte-range "/" (complete-length / "*")\n'),e("ul",[e("li",[a._v("Complete-length = 1*DIGIT\n"),e("ul",[e("li",[a._v("完整资源的带下，如果未知则用 * 代替")])])]),a._v(" "),e("li",[a._v('byte-range = first-byte-pos "-" last-byte-pos')])])])])]),a._v(" "),e("li",[a._v("例如：\n"),e("ul",[e("li",[a._v("Content-Range: bytes 42-1233/1234")]),a._v(" "),e("li",[a._v("Content-Range: bytes 42-1233/* (*代表完整资源大小未知)")])])])]),a._v(" "),e("h3",{attrs:{id:"服务器响应-二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应-二","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务器响应(二)")]),a._v(" "),e("h4",{attrs:{id:"_416-request-range-not-satisfiable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_416-request-range-not-satisfiable","aria-hidden":"true"}},[a._v("#")]),a._v(" 416 Request Range Not Satisfiable")]),a._v(" "),e("ul",[e("li",[a._v("请求范围不满足实际资源的大小，其中 Content-Range  中的 complete-length 显示完整响应的长度，例如：\n"),e("ul",[e("li",[a._v("Content-Range: bytes */1234")])])])]),a._v(" "),e("h4",{attrs:{id:"_200-ok"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_200-ok","aria-hidden":"true"}},[a._v("#")]),a._v(" 200 OK")]),a._v(" "),e("ul",[e("li",[a._v("服务器不支持 Range 请求时，则以 200 返回完整的响应包体")])]),a._v(" "),e("h3",{attrs:{id:"多重范围与-multipart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多重范围与-multipart","aria-hidden":"true"}},[a._v("#")]),a._v(" 多重范围与 multipart")]),a._v(" "),e("ul",[e("li",[a._v("请求\n"),e("ul",[e("li",[a._v("Range: bytes=0-50, 100-150")])])]),a._v(" "),e("li",[a._v("响应\n"),e("ul",[e("li",[a._v("Content-Type: multipart/byteranges; boundary=...")])])])]),a._v(" "),e("h2",{attrs:{id:"cookie-的格式与约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的格式与约束","aria-hidden":"true"}},[a._v("#")]),a._v(" Cookie 的格式与约束")]),a._v(" "),e("p",[a._v("RFC6265, HTTP State Management Mechanism")]),a._v(" "),e("p",[a._v("保存在客户端、由浏览器维护、表示应用状态的 HTTP 头部")]),a._v(" "),e("ul",[e("li",[a._v("存放在内存或者磁盘中")]),a._v(" "),e("li",[a._v("服务器端生成 Cookie 在响应中通过 Set-Cookie 头部告知客户端(允许多个 Set-Cookie 头部传递多个值 Set-Cookie: k1=v1;k2=v2;... )")]),a._v(" "),e("li",[a._v("客户端得到 Cookie 后，后续请求都会自动 Cookie 头部携带至请求中")])]),a._v(" "),e("h3",{attrs:{id:"cookie-与-set-cookie-头部的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-与-set-cookie-头部的定义","aria-hidden":"true"}},[a._v("#")]),a._v(" Cookie 与 Set-Cookie 头部的定义")]),a._v(" "),e("ul",[e("li",[a._v("Cookie 头部中可以存放多个 name/value 名值对")]),a._v(" "),e("li",[a._v("Set-Cookie 头部一次只能传递1个 name/value 名值对，但是响应中可以有多个 Set-Cookie 头部")])]),a._v(" "),e("h3",{attrs:{id:"set-cookie-中描述-cookie-pair-的属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-cookie-中描述-cookie-pair-的属性","aria-hidden":"true"}},[a._v("#")]),a._v(" Set-Cookie 中描述 cookie-pair 的属性")]),a._v(" "),e("p",[a._v("cookie-av = expires-av / max-age-av / domain-av / path-av / secure-av / httponly-av / extension-av")]),a._v(" "),e("ul",[e("li",[a._v('expires-av = "Expires=" sane-cookie-date\n'),e("ul",[e("li",[a._v("cookie 到日期 sane-cookie-date 后失效")])])]),a._v(" "),e("li",[a._v('max-age-av = "Max-age=" none-zero-digit *DIGIT\n'),e("ul",[e("li",[a._v("cookie 经过 *DIGIT 秒后失效，max-age 优先级高于 expires")])])]),a._v(" "),e("li",[a._v('domain-av = "Domain=" domain-value\n'),e("ul",[e("li",[a._v("指定 cookie 可用于哪些域名，默认可以访问当前域名")])])]),a._v(" "),e("li",[a._v('path-av = "Path=" path-value\n'),e("ul",[e("li",[a._v("指定 path 路径下才能使用 cookie")])])]),a._v(" "),e("li",[a._v('secure-av = "Secure"\n'),e("ul",[e("li",[a._v("只有使用 TLS/SSL 协议(HTTPS)时才能使用 cookie")])])]),a._v(" "),e("li",[a._v('httponly-av = "HttpOnly"\n'),e("ul",[e("li",[a._v("不能使用 JavaScript (Document.cookie、XMLHttpRequest、Request APIs) 访问到 cookie")])])])]),a._v(" "),e("h3",{attrs:{id:"cookie-使用的限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-使用的限制","aria-hidden":"true"}},[a._v("#")]),a._v(" Cookie 使用的限制")]),a._v(" "),e("ul",[e("li",[a._v("RFC 规范对浏览器使用 Cookie 的要求\n"),e("ul",[e("li",[a._v("每条 Cookie 的长度 (包括 name、value 以及描述的属性总长度) 至少要达到 4KB")]),a._v(" "),e("li",[a._v("每个域名下至少支持 50 个 Cookie")]),a._v(" "),e("li",[a._v("浏览器至少支持 3000 个 Cookie")])])]),a._v(" "),e("li",[a._v("代理服务器传递 Cookie 时会有限制")])]),a._v(" "),e("h3",{attrs:{id:"cookie-在协议设计上的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-在协议设计上的问题","aria-hidden":"true"}},[a._v("#")]),a._v(" Cookie 在协议设计上的问题")]),a._v(" "),e("ul",[e("li",[a._v("Cookie 会被附加在每个 HTTP 请求中，所以无形中增加了流量")]),a._v(" "),e("li",[a._v("由于在 HTTP 请求中的 Cookie  是明文传递的，所以安全性成问题 (除非用 HTTPS)")]),a._v(" "),e("li",[a._v("Cookie 的大小不应超过 4KB，故对于复杂的存储需求来说是不够用的")])]),a._v(" "),e("h3",{attrs:{id:"登录场景下-cookie-与-session-的常见用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#登录场景下-cookie-与-session-的常见用法","aria-hidden":"true"}},[a._v("#")]),a._v(" 登录场景下 Cookie 与 Session 的常见用法")]),a._v(" "),e("p",[a._v("![登录场景下 Cookie 与 Session 的常见用法](/Users/ye/Desktop/Cookie and Session.png)")]),a._v(" "),e("h3",{attrs:{id:"无状态的-rest-架构-vs-状态管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无状态的-rest-架构-vs-状态管理","aria-hidden":"true"}},[a._v("#")]),a._v(" 无状态的 REST 架构 VS 状态管理")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86.png",alt:"无状态的 REST 架构 VS 状态管理"}})]),a._v(" "),e("h3",{attrs:{id:"第三方-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三方-cookie","aria-hidden":"true"}},[a._v("#")]),a._v(" 第三方 Cookie")]),a._v(" "),e("h4",{attrs:{id:"用户踪迹信息的搜集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户踪迹信息的搜集","aria-hidden":"true"}},[a._v("#")]),a._v(" 用户踪迹信息的搜集:")]),a._v(" "),e("p",[a._v('在访问 A 网站时，该网站的某些资源引用自 B 网站(如 img 标签 src="b")，获取该资源时响应中会带有 Set-Cookie 头部，后续再登录 B 网站时发送的请求会带有 Cookie 头部，B 网站可以对用户身份有一个初步判断，知道用户曾经访问过 A 网站。')]),a._v(" "),e("h2",{attrs:{id:"为什么需要同源策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要同源策略","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么需要同源策略")]),a._v(" "),e("h3",{attrs:{id:"同一个浏览器发出的请求，未必都是用户自愿发出的请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同一个浏览器发出的请求，未必都是用户自愿发出的请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 同一个浏览器发出的请求，未必都是用户自愿发出的请求")]),a._v(" "),e("p",[a._v("请求页面的 HTML 后，浏览器的渲染引擎会自动请求需要的资源文件，css、img 等。")]),a._v(" "),e("h3",{attrs:{id:"站点-domain-b-com-收到的来自同一浏览器的请求，可能来自于站点-domain-a-com"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#站点-domain-b-com-收到的来自同一浏览器的请求，可能来自于站点-domain-a-com","aria-hidden":"true"}},[a._v("#")]),a._v(" 站点 domain-b.com 收到的来自同一浏览器的请求，可能来自于站点 domain-a.com")]),a._v(" "),e("ul",[e("li",[a._v("用户访问的 domain-a.com 使用了 domain-b.com 的资源，向其发起请求")]),a._v(" "),e("li",[a._v("用户直接访问 domain-b.com")])]),a._v(" "),e("h3",{attrs:{id:"浏览器的同源策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的同源策略","aria-hidden":"true"}},[a._v("#")]),a._v(" 浏览器的同源策略")]),a._v(" "),e("p",[a._v("协议(scheme)、主机(domain)、端口(port)必须完全相同")]),a._v(" "),e("h3",{attrs:{id:"安全性与可用性需要一个平衡点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全性与可用性需要一个平衡点","aria-hidden":"true"}},[a._v("#")]),a._v(" 安全性与可用性需要一个平衡点")]),a._v(" "),e("h4",{attrs:{id:"可用性：html-创作者决定跨域请求是否对本站点安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可用性：html-创作者决定跨域请求是否对本站点安全","aria-hidden":"true"}},[a._v("#")]),a._v(" 可用性：HTML 创作者决定跨域请求是否对本站点安全")]),a._v(" "),e("ul",[e("li"),a._v(" "),e("li",[e("p",[a._v("允许跨域写操作：例如表单提交或者重定向请求")]),a._v(" "),e("ul",[e("li",[a._v("CSRF 安全性问题")])])])]),a._v(" "),e("h4",{attrs:{id:"安全性：浏览器需要防止站点-a-的脚本向站点-b-发起危险动作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全性：浏览器需要防止站点-a-的脚本向站点-b-发起危险动作","aria-hidden":"true"}},[a._v("#")]),a._v(" 安全性：浏览器需要防止站点 A 的脚本向站点 B 发起危险动作")]),a._v(" "),e("ul",[e("li",[a._v("Cookie、LocalStorage 和 IndexDB 无法读取")]),a._v(" "),e("li",[a._v("DOM 无法获得(防止跨域脚本篡改 DOM 结构)")]),a._v(" "),e("li",[a._v("AJAX 请求不能发送")])]),a._v(" "),e("h3",{attrs:{id:"跨站请求伪造攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨站请求伪造攻击","aria-hidden":"true"}},[a._v("#")]),a._v(" 跨站请求伪造攻击")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/CSRF.png",alt:"跨站请求伪造攻击"}})]),a._v(" "),e("p",[a._v("防止攻击：")]),a._v(" "),e("ul",[e("li",[a._v("refer")]),a._v(" "),e("li",[a._v("CSRF token")])]),a._v(" "),e("h2",{attrs:{id:"cors-cross-origin-resource-sharing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cors-cross-origin-resource-sharing","aria-hidden":"true"}},[a._v("#")]),a._v(" CORS: Cross-Origin Resource Sharing")]),a._v(" "),e("h3",{attrs:{id:"浏览器同源策略下的跨域访问解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器同源策略下的跨域访问解决方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 浏览器同源策略下的跨域访问解决方案")]),a._v(" "),e("ul",[e("li",[a._v("如果站点 A 允许站点 B 的脚本访问其资源，必须在 HTTP 响应中显式的告知浏览器\n"),e("ul",[e("li",[a._v("访问站点 A 的请求，浏览器应该告知该请求来自站点 B 还是用户意愿")]),a._v(" "),e("li",[a._v("站点 A 的响应中应明确哪些跨域请求时被允许的")])])]),a._v(" "),e("li",[a._v("策略1：何为简单请求？\n"),e("ul",[e("li",[a._v("GET/HEAD/POST 方法之一")]),a._v(" "),e("li",[a._v("仅能使用 CORS 安全的头部：Accept、Accept-Language、Content-Length、Content-Type")]),a._v(" "),e("li",[a._v("Content-Type 值只能是：text/plain、multipart/form-data、application/x-www-form-urlencoded 三者之一")])])]),a._v(" "),e("li",[a._v("策略2：简单请求以外的请求\n"),e("ul",[e("li",[a._v("预检机制，先发起一个 OPTIONS 请求，询问何种请求时被允许的")])])])]),a._v(" "),e("h3",{attrs:{id:"简单请求的跨域访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单请求的跨域访问","aria-hidden":"true"}},[a._v("#")]),a._v(" 简单请求的跨域访问")]),a._v(" "),e("ul",[e("li",[a._v("请求中携带 Origin 头部告知来自哪个域")]),a._v(" "),e("li",[a._v("响应中携带 Access-Control-Allow-Origin 头部表示允许哪些域")]),a._v(" "),e("li",[a._v("浏览器放行")])]),a._v(" "),e("p",[a._v("整个控制过程由浏览器执行，在请求时带上了 Origin 头部，服务端只是返回 Access-Control-Allow-Origin 头部，浏览器判断后决定是否允许。即便不传 Origin 头部，服务端也会返回 ACAO 头部。")]),a._v(" "),e("h3",{attrs:{id:"预检请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预检请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 预检请求")]),a._v(" "),e("ul",[e("li",[a._v("预检请求头部(OPTION 方法)\n"),e("ul",[e("li",[a._v("Access-Control-Request-Method")]),a._v(" "),e("li",[a._v("Access-COntrol-Request-Headers")])])]),a._v(" "),e("li",[a._v("预检请求响应\n"),e("ul",[e("li",[a._v("Access-Control-Allow-Method")]),a._v(" "),e("li",[a._v("Access-Control-Allow-Headers")]),a._v(" "),e("li",[a._v("Access-Control-Max-Age")])])])]),a._v(" "),e("h3",{attrs:{id:"跨域访问资源：请求头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域访问资源：请求头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 跨域访问资源：请求头部")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E5%A4%B4%E9%83%A8.png",alt:"跨域访问资源：请求头部"}})]),a._v(" "),e("h3",{attrs:{id:"跨域访问资源：响应头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域访问资源：响应头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 跨域访问资源：响应头部")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/%E8%B7%A8%E5%9F%9F%E5%93%8D%E5%BA%94%E5%A4%B4%E9%83%A8.png",alt:"跨域访问资源：响应头部"}})]),a._v(" "),e("h2",{attrs:{id:"条件请求的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件请求的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 条件请求的作用")]),a._v(" "),e("h3",{attrs:{id:"资源-uri-与资源表述-representation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源-uri-与资源表述-representation","aria-hidden":"true"}},[a._v("#")]),a._v(" 资源 URI 与资源表述 Representation")]),a._v(" "),e("p",[a._v("![资源 URI 与资源表述 Representation](/Users/ye/Desktop/资源 URI.png)")]),a._v(" "),e("h3",{attrs:{id:"precondition-条件请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#precondition-条件请求","aria-hidden":"true"}},[a._v("#")]),a._v(" Precondition 条件请求")]),a._v(" "),e("h4",{attrs:{id:"目的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目的","aria-hidden":"true"}},[a._v("#")]),a._v(" 目的")]),a._v(" "),e("ul",[e("li",[a._v("由客户端携带条件判断信息，而服务器预执行验证过程成功后，再返回资源的表述")])]),a._v(" "),e("h4",{attrs:{id:"常用应用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用应用场景","aria-hidden":"true"}},[a._v("#")]),a._v(" 常用应用场景")]),a._v(" "),e("ul",[e("li",[a._v("使缓存的更新更有效(如 304 响应码使服务器不用传递包体)")]),a._v(" "),e("li",[a._v("断点续传时对之前内容的验证")]),a._v(" "),e("li",[a._v("当多个客户端并行修改同一资源时，防止某一客户端的更新被错误丢弃")])]),a._v(" "),e("h3",{attrs:{id:"强验证器与弱验证器的概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强验证器与弱验证器的概念","aria-hidden":"true"}},[a._v("#")]),a._v(" 强验证器与弱验证器的概念")]),a._v(" "),e("ul",[e("li",[a._v("验证器 validator： 根据客户端请求中携带的相关头部，以及服务器资源的信息，执行两端的资源验证\n"),e("ul",[e("li",[a._v("强验证器：服务器上的资源表述只要有变动(例如版本更新或者元数据更新)，那么以旧的验证头部访问一定会导致验证不过")]),a._v(" "),e("li",[a._v("弱验证器：服务器上资源变动时，允许一定程度上仍然可以验证通过(例如一小段时间内仍然允许缓存有效)")])])])]),a._v(" "),e("h3",{attrs:{id:"验证器响应头部-一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证器响应头部-一","aria-hidden":"true"}},[a._v("#")]),a._v(" 验证器响应头部(一)")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Etag 响应头部")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("定义：")]),a._v(" "),e("p",[a._v("ETag = entity-tag")]),a._v(" "),e("p",[a._v("entity-tag = [ weak ] opague-tag")]),a._v(" "),e("p",[a._v("weak = %x57.2F")]),a._v(" "),e("p",[a._v("opaque-tag = DQUOTE *etag DQUOTE")]),a._v(" "),e("p",[a._v("etagc = %x21 / %x23-7E / obs-text")])]),a._v(" "),e("li",[e("p",[a._v("给出当前资源表述的标签")])]),a._v(" "),e("li",[e("p",[a._v("例如：")]),a._v(" "),e("ul",[e("li",[a._v('强验证器 ETag: "xyzzy"')]),a._v(" "),e("li",[a._v('弱验证器 ETag: W/"xyzzy"(0x57 = W .2F = /)')])])])])]),a._v(" "),e("li",[e("p",[a._v("Last-Modified 响应头部")]),a._v(" "),e("ul",[e("li",[a._v("定义：Last-Modified = HTTP-date")]),a._v(" "),e("li",[a._v("表示对应资源描述的上次修改时间")]),a._v(" "),e("li",[a._v("对比 Date 头部：Date = HTTP-date\n"),e("ul",[e("li",[a._v("表示响应包体生成的时间")]),a._v(" "),e("li",[a._v("Last-Modified 不能晚于 Date 的值")])])])])])]),a._v(" "),e("h3",{attrs:{id:"条件请求头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件请求头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 条件请求头部")]),a._v(" "),e("p",[a._v("F-match =* 1 fentity-tag  If-modified-since=http-date If-unmodified-since=http-date f-range entity-tag/ HT Tp-date")]),a._v(" "),e("ul",[e("li",[a._v('If-Match = "*" / 1#entity-tag')]),a._v(" "),e("li",[a._v('If-None-Match = "*" / 1#entity-tag')]),a._v(" "),e("li",[a._v("If-Modified-Since = / HTTP-date")]),a._v(" "),e("li",[a._v("If-Unmodified-Since = HTTP-date")]),a._v(" "),e("li",[a._v("If-Range = entity-tag / HTTP-date")])]),a._v(" "),e("h3",{attrs:{id:"缓存更新-一-：首次缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存更新-一-：首次缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存更新(一)：首次缓存")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/first-cache.png",alt:"缓存更新(一)：首次缓存"}})]),a._v(" "),e("h3",{attrs:{id:"缓存更新-二-：基于过期缓存发起条件请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存更新-二-：基于过期缓存发起条件请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存更新(二)：基于过期缓存发起条件请求")]),a._v(" "),e("p",[a._v("缓存的响应超过了过期时间，带上第一次响应的 Last-Modified 和 ETag 头部添加在 If-Modified-Since 和 If-None-Match 头部中发起请求，响应分为资源未修改(304 Not Modified)和已修改(200 OK 返回新的 Last-Modified 和 ETag)两种情况")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/condition-request.png",alt:"缓存更新(二)：基于过期缓存发起条件请求"}})]),a._v(" "),e("h3",{attrs:{id:"增量更新-一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增量更新-一","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量更新(一)")]),a._v(" "),e("p",[a._v("当服务器支持 Range 服务时，连接意外中断时已接受到部分数据")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/add1.png",alt:"增量更新(一)"}})]),a._v(" "),e("h3",{attrs:{id:"增量更新-二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增量更新-二","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量更新(二)")]),a._v(" "),e("p",[a._v("通过 Range 请求下载其他包体时，加入验证器防止两次下载间资源已发生了变更")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/add2.png",alt:"增量更新(二)"}})]),a._v(" "),e("h3",{attrs:{id:"增量更新-三"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增量更新-三","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量更新(三)")]),a._v(" "),e("p",[a._v("如果两次下载操作中，资源已经变化，则服务器用 412 Precondition Failed 通知客户端，而客户端重新下载完整包体。412 响应则会发出第二次的请求。")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/add3.png",alt:"增量更新(三)"}})]),a._v(" "),e("h3",{attrs:{id:"增量更新-四"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增量更新-四","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量更新(四)")]),a._v(" "),e("p",[a._v("通过 If-Range 头部可以避免 2 次请求交互带来的损耗，用 If-Range 代替 If-Match，服务端发现资源变化后直接返回新的资源(200 OK)")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/add4.png",alt:"增量更新(四)"}})]),a._v(" "),e("h3",{attrs:{id:"更新丢失问题-一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新丢失问题-一","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新丢失问题(一)")]),a._v(" "),e("p",[a._v("更新资源意味着 2 步操作：先获取资源，再把本地修改后的资源提交")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/update-lost1.png",alt:"更新丢失问题(一)"}})]),a._v(" "),e("h3",{attrs:{id:"更新丢失问题-二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新丢失问题-二","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新丢失问题(二)")]),a._v(" "),e("p",[a._v("2 个客户端并发修改同一资源会导致更新丢失(下图中 Client 1 的更新丢失了)")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/update-lost2.png",alt:"更新丢失问题(二)"}})]),a._v(" "),e("h3",{attrs:{id:"更新丢失问题-三-：乐观锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新丢失问题-三-：乐观锁","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新丢失问题(三)：乐观锁")]),a._v(" "),e("p",[a._v("只允许第 1 个提交更新的客户端更新资源，Client 2 提交时附加验证头部，Client 1 的修改导致 Client 2 的头部验证通不过。")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/update-lost3.png",alt:"更新丢失问题(三)"}})]),a._v(" "),e("h3",{attrs:{id:"更新丢失问题-四-：乐观锁解决首次上传"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新丢失问题-四-：乐观锁解决首次上传","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新丢失问题(四)：乐观锁解决首次上传")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/update-lost4.png",alt:"更新丢失问题(四)"}})]),a._v(" "),e("p",[a._v("服务器处理条件请求的常见规则：Nginx")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/nginx-condition-request.png",alt:"服务器处理条件请求的常见规则"}})]),a._v(" "),e("p",[a._v("请求头中的 If-None-Match、If-Modified-Since 和 If-Match、If-Unmodified-Since 使用场景")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("If-None-Match、If-Modified-Since：")]),a._v(" "),e("p",[a._v("取缓存时使用，意思是如果服务器端的和我本地的不匹配(None-Match)、已修改(Modified-Since)则返回给我新的资源，如果匹配返回 304 客户端使用本地缓存即可")])]),a._v(" "),e("li",[e("p",[a._v("If-Match、If-Unmodified-Since：")]),a._v(" "),e("p",[a._v("多人写作修改同一个页面，提交更新时使用。如果我提交时上次的资源和我之前拉取的一致(Mactch)，说明没有其他人提交过，我可以直接提交，如果不一致，说明存在别人的提交，拒绝我的本次提交。类似 git 的 conflict。")])])]),a._v(" "),e("h2",{attrs:{id:"缓存的工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存的工作原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存的工作原理")]),a._v(" "),e("h3",{attrs:{id:"http缓存：为当前请求服用前请求的响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http缓存：为当前请求服用前请求的响应","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP缓存：为当前请求服用前请求的响应")]),a._v(" "),e("ul",[e("li",[a._v("目标：减少时延；降低带宽消耗")]),a._v(" "),e("li",[a._v("可选而又必要")])]),a._v(" "),e("h3",{attrs:{id:"如果缓存没有过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果缓存没有过期","aria-hidden":"true"}},[a._v("#")]),a._v(" 如果缓存没有过期")]),a._v(" "),e("p",[a._v("直接使用缓存")]),a._v(" "),e("h3",{attrs:{id:"如果缓存过期，则继续从服务器验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果缓存过期，则继续从服务器验证","aria-hidden":"true"}},[a._v("#")]),a._v(" 如果缓存过期，则继续从服务器验证")]),a._v(" "),e("ul",[e("li",[a._v("304 Not Modified 缓存仍然有效(Content-Length: 0)")]),a._v(" "),e("li",[a._v("200 OK 返回新的资源")])]),a._v(" "),e("h3",{attrs:{id:"私有缓存和共享缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有缓存和共享缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 私有缓存和共享缓存")]),a._v(" "),e("ul",[e("li",[a._v("私有缓存：仅供一个用户使用的缓存，通常只存在于如浏览器这样的客户端上")]),a._v(" "),e("li",[a._v("共享缓存：可以供多个用户的缓存，存在于网络中负责转发消息的代理服务器(对热点资源常使用共享缓存，以减轻资源服务器的压力，并提升网络效率)\n"),e("ul",[e("li",[a._v("Authentication 响应不可被代理服务器缓存")]),a._v(" "),e("li",[a._v("正向代理")]),a._v(" "),e("li",[a._v("反向代理")])])])]),a._v(" "),e("h3",{attrs:{id:"过期的共享缓存—代理服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过期的共享缓存—代理服务器","aria-hidden":"true"}},[a._v("#")]),a._v(" 过期的共享缓存—代理服务器")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/share-cache.png",alt:"过期的共享缓存—代理服务器"}})]),a._v(" "),e("p",[a._v("响应中的 age 头部表明请求的资源已经在代理服务器上存在了多久。")]),a._v(" "),e("p",[a._v("代理服务器上的资源达到过期时间后也会向末端服务器请求最新资源，同样有两种验证结果。代理服务器会重置 age 为 0。")]),a._v(" "),e("h3",{attrs:{id:"缓存实现示意图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存实现示意图","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存实现示意图")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/cache-implement.png",alt:"缓存实现示意图"}})]),a._v(" "),e("h2",{attrs:{id:"缓存新鲜度的四种计算方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存新鲜度的四种计算方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存新鲜度的四种计算方式")]),a._v(" "),e("h3",{attrs:{id:"判断缓存是否过期-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断缓存是否过期-cache-control","aria-hidden":"true"}},[a._v("#")]),a._v(" 判断缓存是否过期(Cache-Control)")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/cache-judge.png",alt:"判断缓存是否过期"}})]),a._v(" "),e("p",[a._v("s-maxage 用于共享缓存，优先级最高。")]),a._v(" "),e("h4",{attrs:{id:"为什么要预估过期时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要预估过期时间","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么要预估过期时间")]),a._v(" "),e("p",[a._v("超过一半的请求没有带缓存相关头部，但资源本身又很少变化，浏览器仍会对其进行缓存")]),a._v(" "),e("h4",{attrs:{id:"常见的预估时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的预估时间","aria-hidden":"true"}},[a._v("#")]),a._v(" 常见的预估时间")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("RFC7234 推荐：(DownloadTime - LastModified)*10%")]),a._v(" "),e("p",[a._v("浏览器获取到资源的时间 - 上次修改的时间")])])]),a._v(" "),e("h3",{attrs:{id:"age-头部及-current-age-的计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#age-头部及-current-age-的计算","aria-hidden":"true"}},[a._v("#")]),a._v(" Age 头部及 current_age 的计算")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/age-header.png",alt:"Age 头部及 current_age 的计算"}})]),a._v(" "),e("h3",{attrs:{id:"代理服务器缓存中的-age-头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代理服务器缓存中的-age-头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 代理服务器缓存中的 Age 头部")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/proxy-age.png",alt:"代理服务器缓存中的 Age 头部"}})]),a._v(" "),e("h2",{attrs:{id:"复杂的-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂的-cache-control","aria-hidden":"true"}},[a._v("#")]),a._v(" 复杂的 Cache-Control")]),a._v(" "),e("h3",{attrs:{id:"cache-control-头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-头部","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control 头部")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/cache-control-header.png",alt:"Cache-Control 头部"}})]),a._v(" "),e("p",[a._v("头部中颜色区分")]),a._v(" "),e("ul",[e("li",[a._v("黑色：只有 token 部分")]),a._v(" "),e("li",[a._v('红色：token = ""')]),a._v(" "),e("li",[a._v('蓝色：token = ""')])]),a._v(" "),e("h3",{attrs:{id:"cache-control-头部在请求中的值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-头部在请求中的值","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control 头部在请求中的值")]),a._v(" "),e("ul",[e("li",[a._v("max-age：告诉服务器，客户端不会接受 Age 超过 max-age 的缓存")]),a._v(" "),e("li",[a._v("max-stale：告诉服务器，即使缓存不再新鲜，但陈旧秒数没有超出 max-stale 时，客户端仍打算使用。若 max-stale 后没有值，则表示无论过期多久客户端都可使用")]),a._v(" "),e("li",[a._v("min-fresh：告诉服务器，Age 至少经过 min-fresh 秒后缓存才可使用")]),a._v(" "),e("li",[a._v("no-cache：告诉服务器，不能直接使用已有缓存作为相应返回，除非带着缓存条件到上游服务端得到 304 验证返回码才可使用现有缓存")]),a._v(" "),e("li",[a._v("no-store：告诉各代理服务器不要对该请求的响应缓存(实际有不少不遵守该规定的代理服务器)")]),a._v(" "),e("li",[a._v("no-transform：告诉代理服务器不要修改消息包体的内容")]),a._v(" "),e("li",[a._v("only-if-cached：告诉服务器仅能返回缓存的响应，若没有缓存则返回 504 错误码")])]),a._v(" "),e("h3",{attrs:{id:"cache-control-头部在响应中的值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-头部在响应中的值","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control 头部在响应中的值")]),a._v(" "),e("ul",[e("li",[a._v("must-revalidate：告诉客户端一旦缓存过期，必须向服务器验证后才可使用")]),a._v(" "),e("li",[a._v("proxy-revalidate：与 must-revalidate 类似但它仅对代理服务器的共享缓存有效")]),a._v(" "),e("li",[a._v("no-cache：告诉客户端不能直接使用缓存的响应，使用前必须在源服务器验证得到 304 返回码。如果 no-cache 后指定头部，则若客户端的后续请求及响应中不含有这些头则可直接使用缓存")]),a._v(" "),e("li",[a._v("max-age：告诉客户端缓存 Age 超过 max-age 秒后则缓存过期")])]),a._v(" "),e("h2",{attrs:{id:"什么样的响应会被缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么样的响应会被缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 什么样的响应会被缓存")]),a._v(" "),e("ul",[e("li",[a._v("请求方法可以被缓存理解(不止于 GET 方法)")]),a._v(" "),e("li",[a._v("响应码可以被缓存理解(404、206、301 的原请求也可以被缓存)")]),a._v(" "),e("li",[a._v("响应与请求的头部没有指明 no-store")]),a._v(" "),e("li",[a._v("响应中至少应含有以下头部中的 1 个或多个：\n"),e("ul",[e("li",[a._v("Expires、max-age、s-maxage、public")]),a._v(" "),e("li",[a._v("当响应中没有明确指示过期时间的头部时，如果响应码非常明确，也可以缓存")])])]),a._v(" "),e("li",[a._v("如果缓存在代理服务器上\n"),e("ul",[e("li",[a._v("不含有 private")]),a._v(" "),e("li",[a._v("不含有 Authorization")])])])]),a._v(" "),e("h3",{attrs:{id:"使用缓存作为当前请求响应的条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用缓存作为当前请求响应的条件","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用缓存作为当前请求响应的条件")]),a._v(" "),e("ul",[e("li",[a._v("URI 是匹配的\n"),e("ul",[e("li",[a._v("URI 作为主要的缓存关键字，当一个 URI 对应多份缓存时选择日期最近的缓存")]),a._v(" "),e("li",[a._v("例如 Nginx 中默认的缓存关键字：proxy_cache_key $scheme$proxy_host$request_uri")])])]),a._v(" "),e("li",[a._v("缓存中的响应允许当前请求的方法使用缓存")]),a._v(" "),e("li",[a._v("缓存中的响应 Vary 头部指定的头部必须与请求中的头部相匹配\n"),e("ul",[e("li",[a._v('Vary = "*" / 1#field-name\n'),e("ul",[e("li",[a._v("Vary: * 意味着一定匹配失败")])])])])]),a._v(" "),e("li",[a._v("当前请求以及缓存中的响应都不包含 no-cache 头部(Pragma: no-cache 或者 Cache-Control: no-cache)")]),a._v(" "),e("li",[a._v("缓存中的响应必须是一下三者之一：\n"),e("ul",[e("li",[a._v("新鲜的(时间上未过期)")]),a._v(" "),e("li",[a._v("缓存中的响应头部明确告知可以使用过期的头部(如  Cache-Control: max-stale=60)")]),a._v(" "),e("li",[a._v("使用条件请求去服务器端验证请求是否过期，得到 304 响应")])])])]),a._v(" "),e("h2",{attrs:{id:"为什么需要-uri-重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-uri-重定向","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么需要 URI 重定向")]),a._v(" "),e("ul",[e("li",[a._v("提交 Form 表单成功后需要显示内容页")]),a._v(" "),e("li",[a._v("站点从 HTTP 迁移到 HTTPS")]),a._v(" "),e("li",[a._v("站点部分 URI 发生变化，但搜索引擎或者流量入口站点只收录了老的 URI")]),a._v(" "),e("li",[a._v("站点正在维护中，需要给用户展示不一样的内容")]),a._v(" "),e("li",[a._v("站点更换了域名")])]),a._v(" "),e("h3",{attrs:{id:"重定向响应返回码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重定向响应返回码","aria-hidden":"true"}},[a._v("#")]),a._v(" 重定向响应返回码")]),a._v(" "),e("ul",[e("li",[a._v("概念\n"),e("ul",[e("li",[a._v("原请求：接收到重定向响应码的请求")]),a._v(" "),e("li",[a._v("重定向请求：浏览器接收到重定向响应码后，会发起新的重定向请求")])])]),a._v(" "),e("li",[a._v("永久重定向(会被缓存)，表示资源永久性变更到新 URI\n"),e("ul",[e("li",[a._v("301(HTTP/1.0)：重定向请求通常会使用 GET 方法，而不管原请求究竟采用的是什么方法")]),a._v(" "),e("li",[a._v("308(HTTP/1.1)：重定向请求必须使用原请求的方法和包体发起访问")])])]),a._v(" "),e("li",[a._v("临时重定向，表示资源只是临时的变更 URI\n"),e("ul",[e("li",[a._v("302(HTTP/1.0)：重定向请求通常会使用 GET 方法，而不管原请求究竟采用的是什么方法")]),a._v(" "),e("li",[a._v("303(HTTP/1.1)：它并不表示资源变迁，而是用新 URI 的响应表述而为原请求服务，重定向请求会使用 GET 方法，会丢弃包体数据\n"),e("ul",[e("li",[a._v("例如表单请求后为用户返回新内容")])])]),a._v(" "),e("li",[a._v("307(HTTP/1.1)：重定向请求必须使用原请求的方法和包体发起访问\n"),e("ul",[e("li",[a._v("例如访问 http://www.baidu.com 返回 307 带 Location: https://www.baidu.com")])])])])]),a._v(" "),e("li",[a._v("特殊重定向\n"),e("ul",[e("li",[a._v("300：响应式内容协商中，告知客户端有多种资源表述，要求客户端选择一种自认为合适的表述")]),a._v(" "),e("li",[a._v("304：服务器端验证过期缓存有效后，要求客户端使用该缓存")])])])]),a._v(" "),e("h2",{attrs:{id:"web-crawler：网络爬虫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-crawler：网络爬虫","aria-hidden":"true"}},[a._v("#")]),a._v(" Web crawler：网络爬虫")]),a._v(" "),e("h2",{attrs:{id:"http-协议的基本认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-协议的基本认证","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP 协议的基本认证")]),a._v(" "),e("h3",{attrs:{id:"认证请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 认证请求")]),a._v(" "),e("ul",[e("li",[a._v("Authorization 头部，如 Authorization: Basic YWFhOmJiYg==")])]),a._v(" "),e("h3",{attrs:{id:"认证响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证响应","aria-hidden":"true"}},[a._v("#")]),a._v(" 认证响应")]),a._v(" "),e("ul",[e("li",[a._v("在响应头部中应告知客户端需要认证\n"),e("ul",[e("li",[a._v("WWW-Authenticate 头部")])])]),a._v(" "),e("li",[a._v("由代理服务器认证\n"),e("ul",[e("li",[a._v("Proxy-Authenticate 头部")])])]),a._v(" "),e("li",[a._v("认证响应码\n"),e("ul",[e("li",[a._v("由源服务器告诉客户端需要传递认证信息：401 Unauthorized")]),a._v(" "),e("li",[a._v("有代理服务器认证：407 Proxy Authentication Required")]),a._v(" "),e("li",[a._v("认证失败：403 Forbidden(也有 401 的实现)")])])])]),a._v(" "),e("h2",{attrs:{id:"如何通过-dns-协议解析域名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何通过-dns-协议解析域名","aria-hidden":"true"}},[a._v("#")]),a._v(" 如何通过 DNS 协议解析域名")]),a._v(" "),e("h3",{attrs:{id:"什么是dns？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是dns？","aria-hidden":"true"}},[a._v("#")]),a._v(" 什么是DNS？")]),a._v(" "),e("ul",[e("li",[e("em",[a._v("Domain Name System")]),a._v(' 一个用于将人类可读的"域名"(www.baidu.com)与服务器IP地址(116.62.160.193)进行映射的数据库')]),a._v(" "),e("li",[a._v("递归查询\n"),e("ul",[e("li",[a._v("根域名服务器")]),a._v(" "),e("li",[a._v("权威服务器")])])])]),a._v(" "),e("h3",{attrs:{id:"dns-域名结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-域名结构","aria-hidden":"true"}},[a._v("#")]),a._v(" DNS 域名结构")]),a._v(" "),e("p",[a._v("树状，顶级域名—>层层向下")]),a._v(" "),e("h2",{attrs:{id:"websockets-解决什么问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websockets-解决什么问题","aria-hidden":"true"}},[a._v("#")]),a._v(" Websockets 解决什么问题")]),a._v(" "),e("h3",{attrs:{id:"如何及时获得更新？从轮询问到通知"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何及时获得更新？从轮询问到通知","aria-hidden":"true"}},[a._v("#")]),a._v(" 如何及时获得更新？从轮询问到通知")]),a._v(" "),e("p",[e("img",{attrs:{src:"/Users/ye/Desktop/websockets.png",alt:"从轮询问到通知"}})]),a._v(" "),e("h3",{attrs:{id:"chrome-请求列表：分析-websocket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chrome-请求列表：分析-websocket","aria-hidden":"true"}},[a._v("#")]),a._v(" Chrome 请求列表：分析 Websocket")]),a._v(" "),e("ul",[e("li",[a._v("过滤器\n"),e("ul",[e("li",[a._v("按类型：WS")]),a._v(" "),e("li",[a._v("属性过滤：is:running")])])]),a._v(" "),e("li",[a._v("表格列\n"),e("ul",[e("li",[a._v("Data：消息负载。如果消息为纯文本，则在此处显示。对于二进制操作码，此列将显示操作码的名称和代码。支持一下操作码：Continuation、Frame、Binary Frame、Connection Close Frame、Ping Frame 和 Pong Frame")]),a._v(" "),e("li",[a._v("Length：消息负载的长度(以字节为单位)")]),a._v(" "),e("li",[a._v("Time：收到或发送消息的时间")])])]),a._v(" "),e("li",[a._v("消息颜色\n"),e("ul",[e("li",[a._v("发送至服务器的文本消息为浅绿色")]),a._v(" "),e("li",[a._v("接收到的文本消息为白色")]),a._v(" "),e("li",[a._v("Websocket 的操作码为浅黄色")]),a._v(" "),e("li",[a._v("错误为浅红色")])])])]),a._v(" "),e("h3",{attrs:{id:"支持双向通讯的-websocket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持双向通讯的-websocket","aria-hidden":"true"}},[a._v("#")]),a._v(" 支持双向通讯的 Websocket")]),a._v(" "),e("ul",[e("li",[a._v("RFC6455(2011.12)")]),a._v(" "),e("li",[a._v("双向通讯的优劣\n"),e("ul",[e("li",[a._v("可伸缩性较差")])])]),a._v(" "),e("li",[a._v("如何管理会话")]),a._v(" "),e("li",[a._v("如何维持长连接")]),a._v(" "),e("li",[a._v("兼容 HTTP 协议\n"),e("ul",[e("li",[a._v("端口服用")])])]),a._v(" "),e("li",[a._v("支持扩展\n"),e("ul",[e("li",[a._v("如 permessage-deflate 扩展(压缩)")])])])]),a._v(" "),e("h2",{attrs:{id:"websocket-的约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket-的约束","aria-hidden":"true"}},[a._v("#")]),a._v(" Websocket 的约束")]),a._v(" "),e("h3",{attrs:{id:"websocket-的成本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket-的成本","aria-hidden":"true"}},[a._v("#")]),a._v(" Websocket 的成本")]),a._v(" "),e("ul",[e("li",[a._v("实时性与可伸缩性\n"),e("ul",[e("li",[a._v("牺牲了简单性：在 HTTP 请求中，多个请求分多次发送，可以通过负载均衡等减轻服务器压力。Websocket 多个请求只有一个 websocket 连接，需要进行分层架构。")])])]),a._v(" "),e("li",[a._v("网络效率与无状态：请求 2  基 于请求 1\n"),e("ul",[e("li",[a._v("牺牲了简单性与可见性")])])])]),a._v(" "),e("h3",{attrs:{id:"长连接的心跳保持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#长连接的心跳保持","aria-hidden":"true"}},[a._v("#")]),a._v(" 长连接的心跳保持")]),a._v(" "),e("ul",[e("li",[a._v("HTTP 长连接只能基于简单的超时(常见为 65 秒)")]),a._v(" "),e("li",[a._v("Websocket 连接基于 ping/pong 心跳机制维持")])]),a._v(" "),e("h3",{attrs:{id:"兼容-http-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容-http-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 兼容 HTTP 协议")]),a._v(" "),e("ul",[e("li",[a._v("默认使用 80 或者 443 端口")]),a._v(" "),e("li",[a._v("协议升级")]),a._v(" "),e("li",[a._v("代理服务器可以简单支持")])]),a._v(" "),e("h3",{attrs:{id:"设计哲学：在-web-约束下暴露-tcp-给上层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计哲学：在-web-约束下暴露-tcp-给上层","aria-hidden":"true"}},[a._v("#")]),a._v(" 设计哲学：在 Web 约束下暴露 TCP 给上层")]),a._v(" "),e("ul",[e("li",[a._v("元数据去哪了？\n"),e("ul",[e("li",[a._v("对比：HTTP 协议头部会存放元数据")]),a._v(" "),e("li",[a._v("由 Websocket 上传输的应用层存放元数据")])])]),a._v(" "),e("li",[a._v("基于帧：不是基于流（HTTP、TCP)\n"),e("ul",[e("li",[a._v("每一帧要么承载字符数据，要么承载二进制数据")])])]),a._v(" "),e("li",[a._v("基于浏蛲器的同源策略槙型（非浏览器无效）\n"),e("ul",[e("li",[a._v("可以使用 Access-Control-Alow-Origin 等头部")])])]),a._v(" "),e("li",[a._v("基于 URI、子协议支持同主机同端口上的多个服务")])]),a._v(" "),e("h2",{attrs:{id:"websocket-协议格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket-协议格式","aria-hidden":"true"}},[a._v("#")]),a._v(" Websocket 协议格式")])])}];e.d(t,"a",function(){return i}),e.d(t,"b",function(){return r})},173:function(a,t,e){"use strict";e.r(t);var i=e(171),r=e(165);for(var v in r)"default"!==v&&function(a){e.d(t,a,function(){return r[a]})}(v);var _=e(0),s=Object(_.a)(r.default,i.a,i.b,!1,null,null,null);s.options.__file="HTTP 1.1 协议.md",t.default=s.exports}}]);